# pre-commitの設定ファイル
# GitHubなどから取得するフックのリポジトリを定義
repos:
-   # Ruffは高速なPythonリンター（構文チェックツール）
    repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: 'v0.0.262'  # 使用するバージョン
    hooks:
    -   id: ruff  # Ruffを実行するフック
        args: [--fix, --exit-non-zero-on-fix] 
        # --fix: 自動修正を有効化
        # --exit-non-zero-on-fix: 自動修正が行われた場合でもエラー終了コードを返す。
        #   これにより、修正されたコードを確認する機会が得られ、
        #   「問題があったが修正された」という情報が開発者に伝わる
        exclude: ^(backup/|tests/)  # backup/とtests/ディレクトリは除外
        pass_filenames: false  # ファイル名を渡さず、全ファイルをチェック
        always_run: true  # 常に実行（変更があるなしに関わらず）
        
-   # ローカルで定義するフック（独自スクリプトなど）
    repo: local
    hooks:
    -   # 循環的複雑度（コードの複雑さ）をチェックするフック
        id: complexity-check
        name: complexity check
        description: check for code complexity
        entry: bash -c 'radon cc --min D game/ || (echo "コードの複雑性が高すぎます。リファクタリングを検討してください。" && exit 1)'
        language: system
        types: [python]
        
    -   # ファイルの行数をチェックするフック
        id: line-count-check
        name: line count check
        description: check file line counts
        entry: python -c "import sys; import subprocess; result = subprocess.run('radon raw game/', shell=True, capture_output=True, text=True); lines = [line for line in result.stdout.split('\n') if ' L:' in line]; large_files = [line for line in lines if int(line.split('L:')[1].strip().split()[0]) > 500]; print('大きすぎるファイル:' + '\\n'.join(large_files) if large_files else 'すべてのファイルは500行未満です。'); sys.exit(1 if large_files else 0)"
        language: system
        types: [python]
        verbose: true

-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-added-large-files

-   repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
    -   id: flake8
        additional_dependencies: [flake8-docstrings]

-   repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
    -   id: isort
        args: ["--profile", "black", "--filter-files"]

-   repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
    -   id: black 